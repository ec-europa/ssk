# ==============================================================================
# Pull request clone ===========================================================
# ==============================================================================
# Use plugin to checkout pull requests for caching issue:
# https://github.com/drone/drone/issues/2390
# ==============================================================================
clone:
  git:
    image: plugins/git:next

# ==============================================================================
# Workspace location.
# ==============================================================================
workspace:
  base: /test
  path: toolkit

# ==============================================================================
# Matrix section
# ==============================================================================
matrix:
  PHP_VERSION:
    - 5.6
    - 7.1
  PHING_OPTS:
    - -logger phing.listener.AnsiColorLogger
  BUILD_OPTIONS:
    - -D'platform.package.version'='2.3' -D'profile'='multisite_drupal_standard'
    - -D'platform.package.version'='2.4' -D'profile'='multisite_drupal_standard'
    - -D'platform.package.version'='2.5' -D'profile'='multisite_drupal_standard'
    - -D'profile'='drupal' -D'profile.name'='minimal' -D'profile.core'='7.x'

# ==============================================================================
# Main services
# ==============================================================================
services:
  web:
    image: fpfis/httpd-php-dev:${PHP_VERSION=5.6}
    environment:
      - DOCUMENT_ROOT=/test/toolkit/build
  mysql:
    image: percona/percona-server:5.6
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes

# ==============================================================================
# Pipelines
# ==============================================================================
pipeline:

  # ============================================================================
  # Setup section:
  # ============================================================================
  setup:
    image: fpfis/httpd-php-dev:${PHP_VERSION=5.6}
    group: setup
    commands:
      - PROJECT=$(pwd) composer toolkit-install
      - rm -rf ./.tmp/ ./build
      - cp ./includes/phing/props/drone.props build.develop.props
      - ./toolkit/phing project-properties-validate ${PHING_OPTS}
    volumes:
      - /cache/${DRONE_REPO_NAME}:/cache

  # ============================================================================
  # Build section:
  # ============================================================================
  build:
    image: fpfis/httpd-php-dev:${PHP_VERSION=5.6}
    group: build
    secrets: [ github_api_token ]
    commands:
      - ./toolkit/phing build-platform build-subsite-dev ${BUILD_OPTIONS} ${PHING_OPTS}
    volumes:
      - /cache/${DRONE_REPO_NAME}:/cache

  solr:
    image: fpfis/solr5
    group: build
    detach: true

  # ============================================================================
  # Install section:
  # ============================================================================
  install-clean:
    image: fpfis/httpd-php-dev:${PHP_VERSION=5.6}
    commands:
      - ./toolkit/phing install-clean ${BUILD_OPTIONS} ${PHING_OPTS}
      - ./toolkit/phing drush-gdpr-dump -D'database-file'='/test/toolkit/dump.sql' ${BUILD_OPTIONS} ${PHING_OPTS}
    volumes:
      - /cache/${DRONE_REPO_NAME}:/cache

  # ============================================================================
  # Clone section:
  # ============================================================================
  install-clone:
    image: fpfis/httpd-php-dev:${PHP_VERSION=5.6}
    commands:
      - ./toolkit/phing install-clone -D'project.db.file'='/test/toolkit/dump.sql.gz' ${BUILD_OPTIONS} ${PHING_OPTS}
    volumes:
      - /cache/${DRONE_REPO_NAME}:/cache

  smoketest:
    image: fpfis/httpd-php-dev:${PHP_VERSION=5.6}
    commands:
      - ./toolkit/phing drush-run-smoketest ${BUILD_OPTIONS} ${PHING_OPTS}
    volumes:
      - /cache/${DRONE_REPO_NAME}:/cache

  selenium:
    image: selenium/standalone-chrome
    group: prebehat
    detach: true

  # ============================================================================
  # Test section:
  # ============================================================================
  behat:
    image: fpfis/httpd-php-dev:${PHP_VERSION=5.6}
    group: coding-standards
    commands:
      - ./toolkit/phing test-run-behat ${BUILD_OPTIONS} ${PHING_OPTS}
    volumes:
      - /cache/${DRONE_REPO_NAME}:/cache

  phpcs:
    image: fpfis/httpd-php-dev:${PHP_VERSION=5.6}
    group: coding-standards
    commands:
      - ./toolkit/phing test-run-phpcs ${BUILD_OPTIONS} ${PHING_OPTS}
    volumes:
      - /cache/${DRONE_REPO_NAME}:/cache

  php7-comp:
    image: fpfis/httpd-php-dev:${PHP_VERSION=5.6}
    group: coding-standards
    commands:
      - ./toolkit/phing test-phpcs-setup -D'phpcs.files'='$${build.dist.dir}' -D'phpcs.standards'='PHPCompatibility' -D'phpcs.extensions'='php inc module install test profile theme' -logger phing.listener.AnsiColorLogger
      - ./toolkit/phpcs --runtime-set testVersion 7.0- ./lib || echo "PHPCompatibility failed..."
      - ./toolkit/phpcs --runtime-set testVersion 7.0- ./includes || echo "PHPCompatibility failed..."

  # ============================================================================
  # Git hook integration section:
  # ============================================================================
  git-hooks:
    image: fpfis/httpd-php-dev:${PHP_VERSION=5.6}
    commands:
      - ./toolkit/phing git-hook-enable ${BUILD_OPTIONS} ${PHING_OPTS}
      - ./toolkit/phing git-hook-disable ${BUILD_OPTIONS} ${PHING_OPTS}
      - ./toolkit/phing git-hook-enable ${BUILD_OPTIONS} ${PHING_OPTS}
    volumes:
      - /cache/${DRONE_REPO_NAME}:/cache

  # ============================================================================
  # Notify section:
  # ============================================================================
  # slack:
  #   image: plugins/slack
  #   channel: ci
  #   username: Subsite-QA
  #   icon_url: https://www.drupal.org/files/examples_meatwad256.png
  #   secrets: [ slack_webhook ]
  #   when:
  #     status: [ success, failure ]
  #   template: >
  #     {{#success build.status}}
  #       {{repo.name}}@{{build.branch}} <{{build.link}}|passed> all subsite tests.
  #     {{else}}
  #       {{repo.name}}@{{build.branch}} <{{build.link}}|failed> subsite tests.
  #     {{/success}}
